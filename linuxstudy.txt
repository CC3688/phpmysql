Linux根目录文件介绍
/bin        #binary二进制
            存放系统许多可执行程序文件  执行的相关指令，例如：ls pwd whoami,后台的支持文件目录

/sbin       #超级的二进制
            存放系统许多可执行程序文件，许多指令支持文件 ，是root管理员执行指令的支持文件,如：init 

/usr        #unix system resource 操作系统资源文件目录，类似win系统的C:/Program File目录
            是系统软件安装目录
        /usr/bin     软件安装时形成的 普通指令文件 存放目录
        /usr/sbin    软件安装时形成的 超级指令文件 存放目录 给root管理员使用

/dev       #device 设备目录     
           系统把全部硬件眏射为文件存储在此目录
           例如： /dev/cdrom 用于指向光驱

/home    家目录
         每给系统增加一个用户，都会在此目录下创建一个 同名（自己设置的话，就是自己起的名字，默认和用户名同名） 
         的文件 目录 作为该用户的家目录使用，
         该用户对家目录拥有绝对权限。用户每次登录系统首先进入其家目录。

/root    超级管理员root的家目录

/proc    内存映射目录
         可以查看系统的相关信息

/tmp     系统临时目录

/var     variable 可变的、易变的   该目录存放的文件经常发生变动 
        （php程度文件），用于以后项目部署程序项目    /var/www/shop    /var/www/book

/boot   系统启动目录
        /boot/initramfs-2.6.32-504.e16.i686.img 是系统内核文件

/etc    系统主要配置文件目录
        /etc/passwd  存放系统用户信息
        /etc/group   存放系统用户信息        

/lib    library 系统资源库目录

/mnt    挂载目录 ，可以有可无

/selinux   secure enhanced linux 安全增强型linux



Linux操作指令

查看当前操作目录拉置
>pwd

查看（当前）目录里边的文件内容
>ls            //list    
>ls -l         //显示文件的详细信息
>ls -al        //all显示所有文件的详细信息（隐藏文件也显示也来，名称有. 表示隐藏）
>ls -a         //显示目录全部文件名字(隐藏文件也显示出来)
>ls [-al] 目录  //查看指定目录的文件信息

目录的切换
>cd 目录名字
>cd .. 或    ../        //上级目录切换
>cd .  或 cd ./         //切换到当前目录
>cd ~  或 cd            //无论你在任何位置，都直接跑回家目录

用户切换
>su -     或者 su - root          //切换到root超级管理员
>su 普通用户名                     //切换到普通用户
>exit                           //退回到原来的用户
用户切换时候会造成叠加效果，因此不要重复su动作
CC->root->CC->root->CC    此时退出，要重复退，退很多次才能退出窗口
                          最好用su 与exit 配本使用

查看当前用户是谁
>whoami       //当前正在操作系统的用户
>who am i     //显示登录系统的用户信息（与su 没有关系)

图形界面 和 命令界面 切换 （root用户）
>init 3         //切换到 命令界面
>init 5         //a切换到 图形界面

查看指令对应的可执行文件位置
>which 指令      

直接输出文件内容到终端
>cat 文件

目录操作
   创建目录 make directory
   >mkdir 目录名称                           //创建单个目录
   >mkdir -p newdir1/newdir2/newdir3       //(-p)递归创建多级目录 
   >mkdir dir/dri2/newdir                  //
   >mkdri -p dir/newdir1/newdir2
        多级目录，新的目录只有一个层次就不用加-p参数。大于等于2个层次就需要-p参数
        也可以用绝对路径来创建目录
  移动目录 move     也可以绝对路径来定位目录   （目录下的子目录一并移走了）
  >mv dir1  dir2             //dir1移动 到 dir2的目录下
  >mv dir1/dir2   dir3       //dir2移动 到 dir3的目录下  dir2移动到dir3下并改名字为原名
  >mv dir1/dri2   dir3/dir4  //dir2移动 到 dir4的目录下  dir2移动到dir4下并改名字为原名
     移动到的目标目录都是存在的
                        (mv 指令的第二个参数是新名字就是改名字操作
                            指令的第二个参数是存在的名字就是移动操作)
  目录改名字操作
  >mv dir1 newdir              //dir1改名字为newdir  dir1移动到当前目录下，并改名为newdir
  >mv dir1/dir2  dir3           //dir2移动到dir3目录下，并改名字为 原名
  >mv dir1/dir2   dir3/newdir  //dir2移动到dir3下并改名字为newdir   

  复制操作 copy  本身还有递归 需要-R （recursive递归）
  >cp -r dir1 dir2                       //dir1 复制到 dir2 下，并改名字为 原名
  >cp -r dir1/dir2  dir3/newdir          //dir2复制到dir3 下，并改名字为 newdir
  >cp -r dir1/dir2  newdir               //dir2复制到当前目录，并改名字为newdir
  >cp dir1/file    dir2                  //file文件 复制到当前 dir2目录下，并改名字为 原名
  >cp dir1/file    dir2/dir3/newfile     //file文件 复制到dir3下，并改名字为 newfile 

  删除操作 remove   -f    force（强制)
  >rm file          //删除file文件 
  >rm -r dir       //删除目录      
  >rm -rf filename  //递归强制删除文件(目录)
  >rm -rf  /        //递归强制删除 /斜杠 根目录  （不要试，试了系统就完了）

文件操作指令
  文件内容查看
  >cat  filename    //一次性把全部内容都输出到终端
  >more filename    //通过敲回车方式逐行显示出来 （只能向后看，不能向前看）  按q键 可以退出查看
  >less filename    //通过'上下左右'键 方式查看文件各部分内容(支持回看)  q键结束查看
  >head -n filename //查看文件的前n（数字）行
  >tail -n filename //查看文件的最后n（数字)行
  >wc filename      //查看文件内容的行数

创建文件
  >touch filename      //在当前文件创建filename文件
  >touch dir/filename  //在指定目录下创建filename文件
  >touch /home/cc/dir/newfile    //通过绝对路径创建newfile文件
  
给文件追加内容
>echo 内容 > 文件     //把‘内容’ 以覆盖写 方式 添加 到文件 中，
>echo 内容 >> 文件    //把 ‘内容’以追加写方式添加到文件中
                以上两个指令，文件不存在，则会自动先创建文件，再执行写操作

用户操作（创建，修改，删除）  root用户才能行用户操作
        对应配置文件：/etc/passwd     可用cat 看一下这里的情况
           创建
           >useradd  用户名      //默认时，会创建一个同名组，并归属于同名组
           >useradd -g 组编码 -d 家目录 -u 用户编号 用户名
           修改
           >usermod -g 组别 -d 家目录（手动先建好） -u 用户编号 -l 新用户名  用户名
           删除
           >userdel -r 用户名   //删除用户信息同时家目也删除。(没加-r 家目录不删除，需要手动删除)
           >passwd 用户名      //设置密码
组别操作(创建，修改，删除)  root用户才能进行操作
        对应配置文件 /etc/group
           创建 groupadd
           >groupadd  组名      
           修改
           >groupmod -g 本身编号 -n 新组名  组名
           删除 （组里边存在用户信息时禁止删除）
           >groupdel 组别

查看指令可怜使用的参数
        >man 指令     

在指定文件中搜录内容
     >grep 被搜索的内容  文件     //被搜寻内容所在行的信息都会输出
     >grep stap  /etc/group     //在group文件中搜寻stap字样

     >which 指令    //查看指令对应的二进制文件
     >ps -A        //查看系统活跃进程process
     >du -h  目标文件或目录      //以k,m,g为单位显示目录或文件占据磁盘空间的大小block
     >date -s "2017-09-13 19:42:30"  //给系统设置时间  需要root权限
     >date           //查看系统时间 
     >df -lh         //查看系统分区情况
     >kill -9 pid   //先用ps -A 查看一下，//杀死指定的进程号的进程 -9是固定参数 pid 要杀的进程号

管道pipe  |  (管道符号）  前者的输出是后者的输入参数
    linux 的管道
    其中的许多指令（grep head tail wc ls 等等）都可以当做管道符号使用
    >ls -l | wc  //计算当前目录文件 行数
    >ls -l | head -5 //查看当前
    >ls -l | head -30 | tail -5  //查看当前目录第26 到第30 个文件
    >grep this apple.txt | grep was       //在apple.txt 文件中查找一行，该行既出现this字样，还出现 was 字样

文件查找find  (不要在系统繁忙的时候查找文件 find 系统会负载过大，会卡)
    >find  被查找目录  选项  选项值[ 选项  选项值 选项  选项值]
    具体选项：
        -name  文件名字     //直接根据文件名字查找文件
        > find  /  -name  passwd     //把系统全部目录“递归”遍历一次，进行passwd文件查找
        > find  ./  -name  "o*"     //在当前目录下模糊查找o字符作为开始内容的文件名字

        -size  大小         //直接根据文件大小查找文件
        单位：默认512字节
              100c  字节单位(大小：100*1)
              12k   千字节单位(大小：12*1024)
              35    512字节(大小：35*512)
              5m    兆字节(大小：5*1024*1024)
        
        范围：+(大于)/-(小于)
        > find  ./  -size  23c    //找到大小为23字节的文件
        > find  ./  -size  +7k    //找到大小大于7k的文件
        > find  ./  -size  -100c  //找到大小小于100字节的文件

        -maxdepth  层次     //限制最深层次查找文件
        > find  /  -maxdepth  4  -name  passwd   //限制最深为4个目录层次，进行passwd文件查找

        -mindepth  层次     //限制最浅层次查找文件

        -perm  权限         //把符合某个权限的文件给查找出来
        -user  主人名字     //通过主人查找文件
        -group 组名字       //通过组别查找文件
        -type  f/d          //根据“文件/目录”查找
 
 退出当前命令 执行状态 输入
     >开始键+c   


软链接 就是window系统定义的快捷方式   可以对硬盘空间进行合理分配
>ln -s 源文件  软链接
        a.设置软链接，如果 软链接 和 源文件 不在同一级目录，原文件需要设置为绝对路径方式
        b.普通文件的目录都可以设置软链链
        c.原文件 被删除，对应的软链接就变为"无效链接"，如果再创建一个同名原文件，软链接又恢复为有效链文件
    
硬链接
    系统里边文件的名称(引用)就是硬链接。     
    给文件增加名称(引用)的过程就是创建"硬链接"
    (一个文件有多个名字，它们互为硬链接)

    （一个文件，系统会给它安排一个索引号码,然后，有一个名称来指向这个索引号码(这个文件)，这个名称可以称为一个引用。同一个文件
    可以有多个引用，多个名称，这就是多个硬链接。全都指向同一个文件，当删掉引用名称是，只要还存在一个引用名称，文件就
    还存在，当所有引用名称都删了。这时文件的索引号码,没有任何对应的引用名称，这里系统的垃圾回收机制，就把它回收。

    操作： ls -li   第一部分的数字就是文件的指向的索引号码   权限 后的数字 是硬链接数
       ln [-d] 源文件 硬链接      //-d 可以加也可以不加
        目录，硬链接数至少是2个
        应为目录里有个 .   (当前目录也指向这个目录)
        如果有再一层目录 那么此层的 ../  也会指向这个目录 等于多了一层目录
        也就是说只有一层目录 就2个 二层 3
         
            a设置硬链接的时候，原文件不需要使用绝对路径
            b只有 普通文件 可以设置硬链接  目录不可以
            c同一个原文件的所有硬链接文件必须在同一个硬盘，同一个分区里边

任务调度指令设置  管理员 root
    规定系统在指定的时间 完成指定的任务过程
        查看高度信息
        >crontab -l   查看调度信息
        >crontab -e   编辑调度信息
            具体 #分钟 小时 天 月份 星期 指示命令    
            （分钟用0-59，小时用0-23,天1-31，月1-12，星期0-6，0表示星期天）
            不限制就 写 *


文件主人，组别设置
    chown 主人 filename
    chown 主人.组别 filename
    chown .组别 filename
    chown -R 主人.组别 filename    递归方式设置目录的属组
    chown -R 777 filename         递归方式设置目录的权限  



vi编辑器
   >vi 文件名       //就可以用vi打开一个文件 
   
   三种模式：
        编辑模式(下方有--插入--)     尾行模式(有: 或 /)     命令模式(默认)(没提示)

        命令模式(a，i,o,s)-------->编辑模式
                命令模式<--------（esc）编辑模式
                a:光标向后移动一位，进入编辑模式
                i:光标和内容 没有变化 进入 编辑模式     （至少记住这种）
                o:新起一行进入 编辑模式
                s:删除光标所在字符  进入编辑模式

        命令模式(:   /)-------->尾行模式
              命令模式<--------(esc慢，连续两次esc,删除全部尾行内容)尾行模式

        编辑模式    和    尾行模式      无法直接切换


        尾行模式：
            输入指令 回车 执行
            :w     //对编辑后的文档进行保存
            :q     //退出vi编辑器
            :wq    //保存并退出编辑器
            :q!    //强制退出，不保存
            :w!    //强制保存
            :wq!   //强制保存退出

            :set number 或nu        //给编辑器设置行号
            :set nonumber 或nonu    //取消行号设置

            :n         //（n表示数字) 光标定位到第n行

            :/内容/  或者 /内容  (/进入尾行的)        //内容查找  按n 下一个 N  上一个
                        查找后的内容会 高亮显示  可以用 :nohl  取消高亮显示
            内容替换
            :s/cont1/cont2/          //cont1替换为cont2    替换光标所在行的第一个目标    
            :s/cont1/cont2/g         //cont1替换为cont2    替换光标所在行的全部目标
            :%s/cont1/cont2/g         //cont1替换为cont2   替换文档的全部目标    

        命令模式操作  （大写对应大写的字母，小写对应小写的字母，严格区分大小写）
            光标移动 ：（至少记住字符级的）
                字符级：   上k 下j 左h 右l (箭头键)    字母键对应上下左右
                单词级：  w     // word    下个单词的首字母
                         b     // before  上个单词首字母
                         e     // end     下个单词尾字母   
                行级     $    //定位到行尾
                         0     //定位到行首
                段落级    {     //上（本）个段落首部       （可以翻屏）
                          }    //下（本）个段落尾部
                屏幕级（不翻屏)
                    H     //当前屏幕首部
                    L     //当前屏幕尾部
                文档级
                        G:   文档尾部
                        1G:  文档首部
                        nG:  文档的第n行
             删除内容 
                 dd      //删除光标当前行
                 n dd    //向后删除n行内容 （包括当前行)
                 x       //删除光标所在的字符
                 c w     //从光标所在的位置，删除至单词的结尾（同时变为 编辑模式)
             复制内容
                 yy      //复制光标当前行
                 n yy    //向后复制n行内容（包括当前行)
                 p       //对复制(删除)后的内容进行 粘贴 操作

             快捷操作
                 r 字符    //快速替换单个字符
                 u          撤销undo
                 .          点，重复执行上一次命令
                 J          大写J ,合并两行




权限操作
        权限本身划分为：读 Read  写 Write 执行 eXecute
        权限针对用户的划分： 主人 User     同组用户 Group   其他组用户Other
        drwxrwxr-x    d表示是目录（-表示普通文件） 主人有rwx权限（1到3个）  同组用户有rwx（4-6）  其他用户有r-x权限（7-9）
                        - 表示没有此权限     

        权限操作
           字母相对方式设置权限 （原先的权限，如果没有改到，就保留）
                >chmod u+rwx, g+rwx, o+rwx  filename   //组别每次可以设置一个或者多个。+ 号表示，增加权限。如果要减少权限用 -
                >chmod u+r,u-x    filename             //+/-增加减少权限需要分别设置,为主人增加读权限，减少执行权限
                >chmod +w,-x  filename                 //可以统一各个组别设置上统一的权限，为所有组增加写权限，减少执行权限
                >chmod u+rx filename
             普通用户，只能给自己的 家目录  的文件设置权限

           数字绝对方式设置权限 （原先的权限，没有保留。改后是什么权限就有什么权限。）
             读：4
             写：2
           执行：1
            0----->没有权限
            1----->执行 权限
            2----->写  权限
            3----->写 执行 权限
            4----->读 权限
            5----->读 执行 权限
            6----->读 写 权限
            7----->读 写 执行 权限
        
        >chmod ABC filename 
              ABC是三个数字，分别代表主人，同组，其他组用户 的权限

        字母和数字 两种方式的取舍 
           权限修改较少 使用字母方式
           权限修改较多 使用数字方式 

        权限管理的使用  可以针对 文件 和 目录 使用
            文件对权限的使用
               读：是否可以查看文件内容
               写：是否可以修改该文件（可以强制写操作)
               执行：linux系统里边可以编写shell脚本程度文件，文件执行过程中可以批量执行指令。
                   (shell文件类似windwos系统的批处理程序文件)
            目录对权限的使用
                读：是否可以查看该目录内部的文件信息
                写：是否可以给该目录创建，删除文件
                执行：指定用户是否可以cd 进入该目录

        权限针对文件强制操作
            对文件没有r/w 写权限，还要修改文件，可以 ! 强制定保存。
               对文件有w 写权限，没有r权限，强制写保存，新写入的内容会覆盖文件原内容。
               对文件没有w写权限。可以强制写保存。
               非主人（同组/其他组）用户，没有w写权限，强行写保存也不会成功（也有可以成功，看上级目录权限，有没有开放写权限 ）
                 （该文件的上级目录针对当前修改者也没有开放w写权限。强行写保存不成功)
                 note:文件强行写保存后其主人 和组别就变为修改者对应的属组。
        
网络配置  远程虚拟主机，千万不要随便改，不然连不上了都不知道怎么回事
    编辑配置文件 
        cd /etc/sysconfig/network-scripts
        cp ifcfg-eth0 ./ifcfg-eth0.bak    编辑此文件 之前先备份，免得编辑坏了找不回来
        设置ip地址 和子掩码
        service network start/stop/restart

    ping      要退出时，可以用crtl+c   (我的黑苹果 开始键+c)    
    如果ping 不通本机，可能是本机开启了防火墙


光驱的挂载   需要先创建一个文件夹 来做为 挂载点  名字是随便起的，但要有可读性
    挂载点： /home/CC/rom     
    光驱硬件： /dev/cdrom        （本身是软连接，光驱源文件是sr0 ）
    >mount 硬件 挂载点目录
    >mount /dev/cdrom  /home/CC/rom

    卸载光驱
    >umount /dev/cdrom          //硬件 卸载光驱
    >umount /home/CC/rom        //挂载点 卸载光驱
    >eject                     //弹出光盘

软件安装
    二进制码软件安装
            其软件安装与windows软件安装原理一致，把“二进制码"软件从安装包复制到系统指定
            目录的过程
        rpm方式 该软件安装本质与win软件安装 方式 一致，就是把软件包里边的二进制代码文件
            复制到系统指定的目录 
            软件安装非常方便    但 软件 的各部分非常固定，不能灵活，需要手动解决依赖关系
        yum智能方式
            该方式 类似于360软件管家里边的一键安装，较智能，该方式 条件：可以上网，通过配置把软件放到指定的位置
            方便 一键安装 无需考虑软件依赖
            yum install php     
    源码编译方式安装软件
        该软件安装的本质，从网络下载下来的软件，内部文件内容都是源码内容
        源码文件--（编译工具）-->二进制码文件--（复制）-->系统指定目录
        软件安装时：
        a 把 源码内容 文件 编译为 二进制代码 文件
        b 再把编译后的 二进制代码文件 复制到系统指定目录
        优点：软件内部各个疗分可以做灵活配置， 安装稍麻烦

ftp:  
    rpm 后缀软件 安装
    >rpm -ivh 软件包全名         就可以安装rpm软件
    >rpm -q  软件包名(完全整)     查看软件有没有安装
    >rpm -e  软件包名            卸载软件
    >rpm -qa                    查看系统里所有rpm方式安装的软件
    >rpm -qa | grep 名字(部分名字)
    软件包全名=软件包名+软件版本+支持的系统+支持的cpu+文件后缀

    >service vsftpd start/stop/restart   控制ftp服务
    >ps -A |grep ftp                     查看ftp相关进程

    winscp连接失败    解决 关闭selinux
    关闭 selinux
    vi /etc/selinux/config
    内容修改为：selinux=disable
    之后重启 reboot

gcc编译器安装
    gcc编译安装
        该gcc可以实现C语言，C++语言，Java语言由源码向二进制码编译的过程，其是一个工具。
    软件安装依赖    安装一个软件，需要先安装另一个软件        

    zlib  是一款解压缩软件   tar.bz2   tar.gz    表示压缩包（win 的.RAR)

    解压缩包的
    tar.gz   --->tar zxvf 压缩包.tar.gz        (压缩包表示名字)   会得到一个 压缩包的文件 
    tar.bz2  --> tar jxvf 压缩包.tar.bz2       (压缩包表示名字)   会得到一个 压缩包的文件
    源码编译安装软件：
    1 ./configure    //在解压软件的目录内部执行  
                相关参数配置，软件 安装位置  支持软件设置  软件依赖检查   生成编译对应的工具文件
    2 make      //根据./configure 的配置信息生成 “二进制文件”
    3 make install     //把生成的 二进制 文件 复制到系统 指定目录

    如果 主机无法访问虚拟机Linux的apache
        http://blog.csdn.net/zymx14/article/details/51440722

    软件安装错误，需要重新安装
       已经执行configure操作
       -->根据正确的参数重新configure 即可

       已经执行 configure ，make 操作
       -->删除解压后的文件，重新解压，configure make

       已经执行configure,make ,make install
       -->删除安装后的文件（有指定安装目录情况）
       -->删除解压的文件
       -->重新解压，重新configure,重新make，重新make install
       


./configure --prefix=/usr/local/php --with-apxs2=/usr/local/http2/bin/apxs --with-mysql=mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd --with-freetype-dir=/usr/local/freetype --with-gd=/usr/local/gd --with-zlib --with-libxml-dir=/usr/local/libxml2 --with-jpeg-dir=/usr/local/jpeg --with-png-dir --enable-mbstring=all --enable-mbregex --enable-shared






      ./configure --prefix=/usr/local/php \
			--with-apxs2=/usr/local/http2/bin/apxs \
			--with-mysql=mysqlnd \
			--with-pdo-mysql=mysqlnd \
			--with-mysqli=mysqlnd \
			--with-freetype-dir=/usr/local/freetype \
			--with-gd=/usr/local/gd \
			--with-zlib --with-libxml-dir=/usr/local/libxml2 \
			--with-jpeg-dir=/usr/local/jpeg \
			--with-png-dir \
			--enable-mbstring=all \
			--enable-mbregex \
			--enable-shared
  